{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/scripts/card.js","webpack://yandex_praktikum/./src/scripts/modal.js","webpack://yandex_praktikum/./src/scripts/index.js","webpack://yandex_praktikum/./src/scripts/cards.js"],"sourcesContent":["// функция создания карточки\nfunction createCard(cardData, removeCard, addLike, openImage) {\n  const cardTemplate = document.querySelector(\"#card-template\").content;\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  deleteButton.addEventListener(\"click\", removeCard);\n\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  likeButton.addEventListener(\"click\", addLike);\n\n  cardImage.addEventListener(\"click\", openImage);\n\n  return cardElement;\n}\n\n// функция удаления карточки\nfunction removeCard(evt) {\n  evt.target.closest(\".places__item\").remove();\n  evt.target.removeEventListener(\"click\", removeCard);\n}\n\n//функция добавления/снятия лайка\nfunction addLike(evt) {\n  evt.target.classList.toggle(\"card__like-button_is-active\");\n}\n\nexport { createCard, removeCard, addLike };\n","// функция обработки клика по кнопке закрытия, сохранения и по оверлею\nfunction handlePopupClick(evt) {\n  if (\n    evt.target.classList.contains(\"popup__close\") ||\n    evt.target.classList.contains(\"popup\") ||\n    evt.target.classList.contains(\"popup__button\")\n  ) {\n    const activePopup = document.querySelector(\".popup_is-opened\");\n    if (activePopup) {\n      closeModal(activePopup);\n    }\n  }\n}\n\n// // функция обработки нажатия клавиши ESC\nfunction closePopupEsc(evt) {\n  if (evt.key === \"Escape\") {\n    const activePopup = document.querySelector(\".popup_is-opened\");\n    if (activePopup) {\n      closeModal(activePopup);\n    }\n  }\n}\n\n// функция открытия поп-апа\nfunction openModal(item) {\n  item.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupEsc);\n  item.addEventListener(\"click\", handlePopupClick);\n}\n\n// функция закрытия поп-апа\nfunction closeModal(item) {\n  item.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupEsc);\n  item.removeEventListener(\"click\", handlePopupClick);\n}\n\nexport { openModal, closeModal };","import \"../pages/index.css\";\nimport { initialCards } from \"./cards\";\nimport { createCard, removeCard, addLike } from \"./card\";\nimport { openModal, closeModal } from \"./modal\";\n\n// нахождение контейнера для карточек\nconst placesList = document.querySelector(\".places__list\");\n\n// нахождение поп-апов\nconst popUps = document.querySelectorAll(\".popup\");\nconst editPopUP = document.querySelector(\".popup_type_edit\");\nconst newCardPopUP = document.querySelector(\".popup_type_new-card\");\nconst imagePopUP = document.querySelector(\".popup_type_image\");\n\n// нахождение кнопок редактирования и добавления новой карточки\nconst editButton = document.querySelector(\".profile__edit-button\");\nconst addButton = document.querySelector(\".profile__add-button\");\n\n// элементы для реализации редактирования профиля\nconst editProfileForm = editPopUP.querySelector(\".popup__form\");\n//////////////////////////////////////////////\nconst popupInput = editPopUP.querySelector(\".popup__input\");\n//////////////////////////////////////////\nconst nameInput = editProfileForm.querySelector(\".popup__input_type_name\");\nconst jobInput = editProfileForm.querySelector(\n  \".popup__input_type_description\"\n);\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\n\n// элементы для реализации добавления новой карточки\nconst newCardForm = newCardPopUP.querySelector(\".popup__form\");\nconst newCardTitle = newCardForm.querySelector(\".popup__input_type_card-name\");\nconst newCardUrl = newCardForm.querySelector(\".popup__input_type_url\");\n\n// элементы для реализации открытия картинки\nconst popUpImage = imagePopUP.querySelector(\".popup__image\");\nconst popUpTitle = imagePopUP.querySelector(\".popup__caption\");\n\n// функция открытия картинки\nfunction openImage(evt) {\n  popUpImage.src = evt.target.src;\n  popUpTitle.textContent = evt.target.alt;\n  popUpImage.alt = evt.target.alt;\n\n  openModal(imagePopUP);\n}\n\n// функция автоматического заполнения формы\nfunction fillProfileForm() {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n}\n\n// функция редактирования данных профиля\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  profileTitle.textContent = nameInput.value;\n  profileDescription.textContent = jobInput.value;\n\n  evt.target.removeEventListener(\"click\", handleProfileFormSubmit);\n}\n\n/////////////////////////////////\nconst showError = (input, errorMessage) => {\n  input.classList.add(\"popup__input_type_error\");\n}\n\nconst hideError = (input) => {\n  input.classList.remove(\"popup__input_type_error\");\n}\n\nconst checkInputValidity = () => {\n  if (!popupInput.validity.valid) {\n    showError(popupInput);\n  }\n  else {hideError(popupInput)};\n}\n\npopupInput.addEventListener(\"input\", function() {\n  checkInputValidity();\n})\n/////////////////////////////////\n\n// функция добавления новой карточки\nfunction handleNewCardSubmit(evt) {\n  evt.preventDefault();\n\n  const newTitle = newCardTitle.value;\n  const newUrl = newCardUrl.value;\n\n  const cardElement = createCard(\n    { name: newTitle, link: newUrl },\n    removeCard,\n    addLike,\n    openImage\n  );\n  \n  placesList.prepend(cardElement);\n\n  closeModal(newCardPopUP);\n  newCardForm.reset();\n}\n\n// функция обработки клика по кнопке редактирования профиля\nfunction handleEditButtonClick() {\n  openModal(editPopUP);\n  fillProfileForm();\n}\n\n// функция обработки клика по кнопке добавления новой карточки\nfunction handleAddButtonClick() {\n  openModal(newCardPopUP);\n}\n\n// вставка карточек на страницу\ninitialCards.forEach((cardData) => {\n  const cardElement = createCard(cardData, removeCard, addLike, openImage);\n  placesList.append(cardElement);\n});\n\n// открытие поп-апов редактирования профиля и добавления новой карты по клику\neditButton.addEventListener(\"click\", handleEditButtonClick);\naddButton.addEventListener(\"click\", handleAddButtonClick);\n\n// обработчик формы добавления новой карточки\nnewCardForm.addEventListener(\"submit\", handleNewCardSubmit);\n\n// обработчик формы сохранения данных профиля\neditProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n","const initialCards = [\n    {\n      name: \"Архыз\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n    },\n    {\n      name: \"Челябинская область\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n    },\n    {\n      name: \"Иваново\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n    },\n    {\n      name: \"Камчатка\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n    },\n    {\n      name: \"Холмогорский район\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n    },\n    {\n      name: \"Байкал\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n    }\n];\n\n\nexport { initialCards }; "],"names":["createCard","cardData","removeCard","addLike","openImage","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","src","link","alt","name","textContent","addEventListener","evt","target","closest","remove","removeEventListener","classList","toggle","handlePopupClick","contains","activePopup","closeModal","closePopupEsc","key","openModal","item","add","placesList","editPopUP","querySelectorAll","newCardPopUP","imagePopUP","editButton","addButton","editProfileForm","popupInput","nameInput","jobInput","profileTitle","profileDescription","newCardForm","newCardTitle","newCardUrl","popUpImage","popUpTitle","validity","valid","forEach","append","value","preventDefault","prepend","reset","handleProfileFormSubmit"],"sourceRoot":""}